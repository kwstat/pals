[{"path":"https://kwstat.github.io/pals/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 pals authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwstat.github.io/pals/articles/bivariate_choropleths.html","id":"r-setup","dir":"Articles","previous_headings":"","what":"R setup","title":"Bivariate choropleth maps","text":"","code":"library(\"knitr\") knitr::opts_chunk$set(fig.align=\"center\", fig.width=6, fig.height=6) options(width=90)"},{"path":"https://kwstat.github.io/pals/articles/bivariate_choropleths.html","id":"single-variate-choropleth-maps","dir":"Articles","previous_headings":"","what":"Single-variate choropleth maps","title":"Bivariate choropleth maps","text":"two maps show male female cancer rates separate maps. rates coarsely binned three classes somewhat comparable bivariate choropleth .","code":"require(latticeExtra) # USCancerRates, mapplot require(maps) # map require(classInt) # classIntervals, findCols require(grid) # viewport, pushViewport require(pals) # brewer.blues, stevens.pinkgreen  suppressWarnings(print(   mapplot(rownames(USCancerRates) ~ log(rate.male) + log(rate.female),           data = USCancerRates,           colramp = brewer.blues,           map = map(\"county\", plot = FALSE, fill = TRUE,                     projection = \"tetra\"),           breaks=classIntervals(log(USCancerRates$rate.female), n=3, style='quantile')$brks,           scales = list(draw = FALSE)) ))"},{"path":"https://kwstat.github.io/pals/articles/bivariate_choropleths.html","id":"comments-on-the-single-variate-choropleth-maps","dir":"Articles","previous_headings":"Single-variate choropleth maps","what":"Comments on the single-variate choropleth maps","title":"Bivariate choropleth maps","text":"fairly easy choose color scheme (e.g. BrewerPal sequential colors). fairly easy interpret single-variate map. two single-variate maps drawn common scale variates (shown ), breakpoints colors might suitable one variate less suited variable. example, rates females high West Virginia lower Mississippi River valley, breakpoints color scale allow identification similar features males.","code":""},{"path":"https://kwstat.github.io/pals/articles/bivariate_choropleths.html","id":"bivariate-color-classes","dir":"Articles","previous_headings":"Single-variate choropleth maps","what":"Bivariate color classes","title":"Bivariate choropleth maps","text":"variate divided thirds (based percentiles) joint classification 9 combinations defined.","code":"cols <- stevens.pinkgreen; nbins <- 3  # categorize rates into 3 percentile bins brksm <- classIntervals(log(USCancerRates$rate.male), n=nbins, style='quantile') ## Warning in classIntervals(log(USCancerRates$rate.male), n = nbins, style = \"quantile\"): ## var has missing values, omitted in finding classes brksf <- classIntervals(log(USCancerRates$rate.female), n=nbins, style='quantile') ## Warning in classIntervals(log(USCancerRates$rate.female), n = nbins, style = \"quantile\"): ## var has missing values, omitted in finding classes classm <- findCols(brksm) classf <- findCols(brksf) # convert x,y classes into a joint class x+3(y-1) USCancerRates$class2 <- classm + nbins*(classf-1)  # scatterplot of two variates showing bins plot(log(rate.female) ~ log(rate.male), data=USCancerRates,      col=cols()[USCancerRates$class2], pch=19,      xlim=c(4.5, 6.5), ylim=c(4.0, 6))"},{"path":"https://kwstat.github.io/pals/articles/bivariate_choropleths.html","id":"bivariate-choropleth-maps","dir":"Articles","previous_headings":"","what":"Bivariate choropleth maps","title":"Bivariate choropleth maps","text":"","code":"m3 <- mapplot(rownames(USCancerRates) ~ class2, data = USCancerRates,               colramp=cols, breaks=seq(from=0.5, by=1, length=nbins*nbins+1),               xlab=\"\",               colorkey=FALSE,               map = map(\"county\", plot = FALSE, fill = TRUE,                         projection = \"tetra\"),               scales = list(draw = FALSE)) suppressWarnings(print( m3 )) # add the color legend m3leg <- levelplot(matrix(1:(nbins*nbins), nrow=nbins), axes=FALSE, col.regions=cols(),                    xlab=\"male  -->\", ylab=\"female  -->\", cuts=8, colorkey=FALSE,                    scales=list(draw=0)) vp <- viewport(x=.15, y=.25, width=.2, height=.2) pushViewport(vp) print(m3leg, newpage=FALSE) popViewport() # test print(m3, more=TRUE) ## Warning in (function (x, y, map, breaks, colramp, exact = FALSE, lwd = 0.5, : 65 ## unmatched regions: alaska,nome, alaska,wade hampton, alaska,haines, alaska,.... print(m3leg, position=c(.05, .15, .25, .35), more=FALSE)"},{"path":"https://kwstat.github.io/pals/articles/bivariate_choropleths.html","id":"comments-on-the-bivariate-choropleth-map","dir":"Articles","previous_headings":"Bivariate choropleth maps","what":"Comments on the bivariate choropleth map","title":"Bivariate choropleth maps","text":"Choosing good color scheme requires care. See Stevens (2015). single map larger (two single-variate choropleth maps), makes easier see individual counties. larger map also reduces relative amount black ink draw county boundaries. bins variate, within-bin structure individual variates overlooked. example , rates cancer high men women West Virginia lower Mississippi River valley. South east area, counties green blue, indicating higher rate men women.","code":""},{"path":[]},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"recommendations","dir":"Articles","previous_headings":"","what":"Recommendations","title":"Overview of the 'pals' package","text":"appearance color depends : display device (screen, paper, photocopy). type graphic (regions/lines). person (age, gender, colorblindness) difficult give definitive recommendations best palettes colormaps. Nonetheless, like. Diverging: coolwarm/warmcool (avoid Mach banding middle). Sequential (multi-hue): ocean.haline, parula (default Matlab). Sequential (one hue): brewer.blues. Rainbow: cubicl, kovesi.rainbow. Cyclical: ocean.phase. Categorical: brewer.paired, stepped Bivariate: brewer.seqseq2.","code":"require(pals) ## Loading required package: pals pal.bands(coolwarm, parula, ocean.haline, brewer.blues, cubicl, kovesi.rainbow, ocean.phase, brewer.paired(12), stepped, brewer.seqseq2,           main=\"Colormap suggestions\") ## Only 24 colors are available with 'stepped' ## Only 9 colors are available with 'brewer.seqseq2'"},{"path":[]},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-bands","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.bands()","title":"Overview of the 'pals' package","text":"Show palettes colormaps colored bands","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for","dir":"Articles","previous_headings":"Functions in the pals package > pal.bands()","what":"What to look for:","title":"Overview of the 'pals' package","text":"good discrete palette distinct colors. good continuous colormap show boundaries colors.","code":"require(pals) op=par(mar=c(0,5,3,1)) labs=c('alphabet','alphabet2', 'glasbey','kelly','polychrome', 'stepped', 'stepped2', 'stepped3', 'tol', 'trubetskoy','watlington') pal.bands(alphabet(), alphabet2(), glasbey(), kelly(),           polychrome(), stepped(), stepped2(), stepped3(),           tol(), trubetskoy(),            watlington(), labels=labs, show.names=FALSE) par(op) pal.bands(coolwarm, viridis, parula, n=200)"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-channels","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.channels()","title":"Overview of the 'pals' package","text":"Show amount red, green, blue, gray colors palette. gray line corresponds luminosity.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-1","dir":"Articles","previous_headings":"Functions in the pals package > pal.channels()","what":"What to look for:","title":"Overview of the 'pals' package","text":"Sequential data usually shown colormap smoothly increasing lightness, shown gray line.","code":"pal.channels(parula, main=\"parula\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-cluster","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.cluster()","title":"Overview of the 'pals' package","text":"Show palette hierarchical clustering palette colors converted LUV coordinates clustering.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-2","dir":"Articles","previous_headings":"Functions in the pals package > pal.cluster()","what":"What to look for:","title":"Overview of the 'pals' package","text":"Colors visually similar tend clustered together. Leaves dendrogram substantially different heights.","code":"pal.cluster(alphabet2(), main=\"alphabet2\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-compress","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.compress()","title":"Overview of the 'pals' package","text":"colormaps pals package defined mathematical formulas (e.g. cubehelix colormap), colormaps originally defined smooth curve seqence 256 colors. seems theoretical reason 256 colors, tradition. natural wonder smooth curve fewer colors equally sufficient. function compresses colormap function small-ish vector colors can passed colorRampPalette re-create original palette non-noticeable difference. palettes pals package stored compressed sequence colors. effective pal.compress? Compressing 50 kovesi.* colormaps reduced memory 352000 46000 bytes, savings 87%. figure , top band (mathematically-defined) cubehelix colormap function evaluated 255 colors. cubebasis vector 17 colors (shown middle). 17 colors passed colorRampPalette function expanded 255 colors shown bottom band. maximum squared LUV distance individual colors two bands 2.34, smaller theoretical perceptual difference roughly 2.5.","code":"# smooth palettes are usually easy to compress p1 <- cubehelix(255) cubebasis <- pal.compress(cubehelix) p2 <- colorRampPalette(cubebasis)(255) pal.bands(p1, cubebasis, p2,   labels=c('cubehelix(255)', 'cubebasis','expanded'), main=\"compression of cubehelix\") pal.maxdist(p1,p2) # 2.08 ## [1] 2.337919"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-csf","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.csf()","title":"Overview of the 'pals' package","text":"Show colormap Campbell-Robson Contrast Sensitivity Chart. contrast sensitivity figure drawn function, spatial frequency increases left right contrast decreases bottom top. bars figure appear taller middle image edges, creating upside-“U” shape, “contrast sensitivity function”. perception curve depends viewing distance.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-3","dir":"Articles","previous_headings":"Functions in the pals package > pal.csf()","what":"What to look for:","title":"Overview of the 'pals' package","text":"vertical bands visible across full vertical axis? vertical bands blur together along right side?","code":"pal.csf(parula, main=\"parula\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-cube","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.cube()","title":"Overview of the 'pals' package","text":"palette converted RGB LUV coordinates plotted three-dimensional scatterplot. LUV space probably better, easier tweak colors hand RGB space.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-4","dir":"Articles","previous_headings":"Functions in the pals package > pal.cube()","what":"What to look for:","title":"Overview of the 'pals' package","text":"good palette colors spread somewhat uniformly 3D.","code":"#pal.cube(cubehelix) #pal.cube(polychrome())"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-heatmap","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.heatmap()","title":"Overview of the 'pals' package","text":"random heatmap generated (5% missing values) key added heatmap appending blank column along right side column palette colors.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-5","dir":"Articles","previous_headings":"Functions in the pals package > pal.heatmap()","what":"What to look for:","title":"Overview of the 'pals' package","text":"Can value cell correctly inferred using key right side? Can missing values identified?","code":"op <- par(mfrow=c(1,2), mar=c(1,1,2,2)) pal.heatmap(alphabet, n=26, main=\"alphabet\") pal.heatmap(alphabet2, n=26, main=\"alphabet2\") par(op)"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-heatmap2","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.heatmap2()","title":"Overview of the 'pals' package","text":"Display multiple palettes heatmap (similar ColorBrewer website).","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-6","dir":"Articles","previous_headings":"Functions in the pals package > pal.heatmap2()","what":"What to look for:","title":"Overview of the 'pals' package","text":"large regions distinct ? rectangular outlines visible? outliers identifiable within region? colors identifiable complex area (left) part map? missing values visible?","code":"pal.heatmap2(watlington(16), tol.groundcover(14), brewer.rdylbu(11),   nc=6, nr=20,   labels=c(\"watlington\",\"tol.groundcover\",\"brewer.rdylbu\"))"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-map","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.map()","title":"Overview of the 'pals' package","text":"Display palette choropleth map similar ColorBrewer website.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-7","dir":"Articles","previous_headings":"Functions in the pals package > pal.map()","what":"What to look for:","title":"Overview of the 'pals' package","text":"regions distinct ? county outlines visible? outliers identifiable within region? colors identifiable complex area (lower left) part map?","code":"pal.map(brewer.paired, n=12, main=\"brewer.paired\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-safe","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.safe()","title":"Overview of the 'pals' package","text":"single palette/colormap shown five colored bands: Without modifications. seen black--white photocopied. seen deutan color-blind. seen protan color-blind. seen tritan color-blind.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-8","dir":"Articles","previous_headings":"Functions in the pals package > pal.safe()","what":"What to look for:","title":"Overview of the 'pals' package","text":"colors still unique viewed less-full color? sequential colormap still sequential?","code":"pal.safe(parula, main=\"parula\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-scatter","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.scatter()","title":"Overview of the 'pals' package","text":"Show colormap scatterplot","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-9","dir":"Articles","previous_headings":"Functions in the pals package > pal.scatter()","what":"What to look for:","title":"Overview of the 'pals' package","text":"Can colors point uniquely identified?","code":"pal.scatter(polychrome, n=36, main=\"alphabet\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-sineramp","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.sineramp()","title":"Overview of the 'pals' package","text":"test image shows sine wave superimposed ramp palette. amplitude sine wave dampened/modulated full top image 0 bottom.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-10","dir":"Articles","previous_headings":"Functions in the pals package > pal.sineramp()","what":"What to look for:","title":"Overview of the 'pals' package","text":"Along top edge, sine wave equally visible across entire image? Along bottom edge, ramp smooth, vertical bands?  example , jet colormap fails tests, tol.rainbow colormap fails clearly show sinewave green/orange region.","code":"pal.sineramp(parula, main=\"parula\") op <- par(mfrow=c(3,1), mar=c(1,1,2,1)) pal.sineramp(jet, main=\"jet\") pal.sineramp(tol.rainbow, main=\"tol.rainbow\") pal.sineramp(kovesi.rainbow, main=\"kovesi.rainbow\") par(op)"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-test","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.test()","title":"Overview of the 'pals' package","text":"function combines several functions single test image. examples show superiority parula colormap compared viridis colormap.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-11","dir":"Articles","previous_headings":"Functions in the pals package > pal.test()","what":"What to look for:","title":"Overview of the 'pals' package","text":"squares (especially upper left lower right) Z-curve distinct? contrast sensitivity function bands visible? sinewave showing bands similar height, smoothly varying along bottom? actual peak volcano identifiable? lowest area? gray/luminosity channel monotonic? examples show poor performance ‘viridis’ colormap dark regions. ‘parula’ palette shows structure volcano.","code":"pal.test(parula) pal.test(viridis) # dark colors are poor"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-volcano","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.volcano()","title":"Overview of the 'pals' package","text":"palettes dark colors one end palette hide shape volcano dark colors.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-12","dir":"Articles","previous_headings":"Functions in the pals package > pal.volcano()","what":"What to look for:","title":"Overview of the 'pals' package","text":"Can locate exact position highest point volcano? upper-right lower-right corners elevation? Mach bands circle peak?","code":"pal.volcano(parula) pal.volcano(viridis)"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"pal-zcurve","dir":"Articles","previous_headings":"Functions in the pals package","what":"pal.zcurve()","title":"Overview of the 'pals' package","text":"Show Z-order curve, coloring cells colormap. difference color squares side--side 1/48 full range. difference color one square atop another 1/96 full range.","code":""},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"what-to-look-for-13","dir":"Articles","previous_headings":"Functions in the pals package > pal.zcurve()","what":"What to look for:","title":"Overview of the 'pals' package","text":"good color palette 64 colors able resolve 4 sub-squares within 16 squares.","code":"pal.zcurve(parula, main=\"parula\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"using-palettes-with-ggplot2","dir":"Articles","previous_headings":"","what":"Using palettes with ggplot2","title":"Overview of the 'pals' package","text":"use colormap ggplot2 package, use ggplot2::scale_fill_gradientn() function.","code":"require(ggplot2) ## Loading required package: ggplot2 require(pals) require(reshape2) ## Loading required package: reshape2 ggplot(melt(volcano), aes(x=Var1, y=Var2, fill=value)) +    geom_tile() +    scale_fill_gradientn(colours=coolwarm(100), guide = \"colourbar\")"},{"path":"https://kwstat.github.io/pals/articles/pals_examples.html","id":"catalog-of-colormaps-and-palettes","dir":"Articles","previous_headings":"","what":"Catalog of colormaps and palettes","title":"Overview of the 'pals' package","text":"following images show bands colormaps palettes pals package, grouped ","code":"# Discrete pal.bands(alphabet, alphabet2, cols25, glasbey, kelly, okabe, polychrome, stepped, stepped2, stepped3, tol, watlington,           main=\"Discrete\", show.names=FALSE) ## Only 26 colors are available with 'alphabet' ## Only 26 colors are available with 'alphabet2' ## Only 25 colors are available with 'cols25'. ## Only 32 colors are available with 'glasbey'. ## Only 22 colors are available with 'kelly'. ## Only 8 colors are available with 'okabe'. ## Only 36 colors are available with 'polychrome'. ## Only 24 colors are available with 'stepped' ## Only 20 colors are available with 'stepped2'. ## Only 20 colors are available with 'stepped3'. ## Only 12 colors are available with 'tol' ## Only 16 colors are available with 'watlington'. # Misc pal.bands(coolwarm,warmcool,cubehelix,gnuplot,jet,parula,tol.rainbow,cividis) # Niccoli pal.bands(cubicyf,cubicl,isol,linearl,linearlhot,           main=\"Niccoli\") # Qualtitative pal.bands(brewer.accent(8), brewer.dark2(8), brewer.paired(12), brewer.pastel1(9),           brewer.pastel2(8), brewer.set1(9), brewer.set2(8), brewer.set3(10),           labels=c(\"brewer.accent\", \"brewer.dark2\", \"brewer.paired\", \"brewer.pastel1\",                    \"brewer.pastel2\", \"brewer.set1\", \"brewer.set2\", \"brewer.set3\"),           main=\"Brewer qualitative\") # Sequential pal.bands(brewer.blues, brewer.bugn, brewer.bupu, brewer.gnbu, brewer.greens,           brewer.greys, brewer.oranges, brewer.orrd, brewer.pubu, brewer.pubugn,           brewer.purd, brewer.purples, brewer.rdpu, brewer.reds, brewer.ylgn,           brewer.ylgnbu, brewer.ylorbr, brewer.ylorrd,           main=\"Brewer sequential\") # Diverging pal.bands(brewer.brbg, brewer.piyg, brewer.prgn, brewer.puor, brewer.rdbu,           brewer.rdgy, brewer.rdylbu, brewer.rdylgn, brewer.spectral,           main=\"Brewer diverging\") # Ocean pal.bands(ocean.thermal, ocean.haline, ocean.solar, ocean.ice, ocean.gray,           ocean.oxy, ocean.deep, ocean.dense, ocean.algae, ocean.matter,           ocean.turbid, ocean.speed, ocean.amp, ocean.tempo, ocean.phase,           ocean.balance, ocean.delta, ocean.curl, main=\"Ocean\") # Matplotlib pal.bands(magma, inferno, plasma, viridis, main=\"Matplotlib\") # Kovesi op = par(mar=c(1,10,2,1)) pal.bands(kovesi.cyclic_grey_15_85_c0, kovesi.cyclic_grey_15_85_c0_s25, kovesi.cyclic_mrybm_35_75_c68, kovesi.cyclic_mrybm_35_75_c68_s25, kovesi.cyclic_mygbm_30_95_c78, kovesi.cyclic_mygbm_30_95_c78_s25, kovesi.cyclic_wrwbw_40_90_c42, kovesi.cyclic_wrwbw_40_90_c42_s25, kovesi.diverging_isoluminant_cjm_75_c23, kovesi.diverging_isoluminant_cjm_75_c24, kovesi.diverging_isoluminant_cjo_70_c25, kovesi.diverging_linear_bjr_30_55_c53, kovesi.diverging_linear_bjy_30_90_c45, kovesi.diverging_rainbow_bgymr_45_85_c67, kovesi.diverging_bkr_55_10_c35, kovesi.diverging_bky_60_10_c30, kovesi.diverging_bwr_40_95_c42, kovesi.diverging_bwr_55_98_c37, kovesi.diverging_cwm_80_100_c22, kovesi.diverging_gkr_60_10_c40, kovesi.diverging_gwr_55_95_c38, kovesi.diverging_gwv_55_95_c39, kovesi.isoluminant_cgo_70_c39, kovesi.isoluminant_cgo_80_c38, kovesi.isoluminant_cm_70_c39, kovesi.rainbow_bgyr_35_85_c72, kovesi.rainbow_bgyr_35_85_c73, kovesi.rainbow_bgyrm_35_85_c69, kovesi.rainbow_bgyrm_35_85_c71, main=\"Kovesi\") pal.bands(kovesi.linear_bgy_10_95_c74, kovesi.linear_bgyw_15_100_c67, kovesi.linear_bgyw_15_100_c68, kovesi.linear_blue_5_95_c73, kovesi.linear_blue_95_50_c20, kovesi.linear_bmw_5_95_c86, kovesi.linear_bmw_5_95_c89, kovesi.linear_bmy_10_95_c71, kovesi.linear_bmy_10_95_c78, kovesi.linear_gow_60_85_c27, kovesi.linear_gow_65_90_c35, kovesi.linear_green_5_95_c69, kovesi.linear_grey_0_100_c0, kovesi.linear_grey_10_95_c0, kovesi.linear_kry_5_95_c72, kovesi.linear_kry_5_98_c75, kovesi.linear_kryw_5_100_c64, kovesi.linear_kryw_5_100_c67, kovesi.linear_ternary_blue_0_44_c57, kovesi.linear_ternary_green_0_46_c42, kovesi.linear_ternary_red_0_50_c52, main=\"Kovesi linear\" ) par(op)   # Bivariate bivcol <- function(pal, nx=3, ny=3){   tit <- substitute(pal)   if(is.function(pal)) pal <- pal()   ncol <- length(pal)   if(missing(nx)) nx <- sqrt(ncol)   if(missing(ny)) ny <- nx   image(matrix(1:ncol, nrow=ny), axes=FALSE, col=pal)   mtext(tit) }  op <- par(mfrow=c(4,4), mar=c(1,1,2,1)) bivcol(arc.bluepink) bivcol(brewer.divbin, nx=3) bivcol(brewer.divdiv) bivcol(brewer.divseq) bivcol(brewer.qualbin, nx=3) bivcol(brewer.qualseq) bivcol(brewer.seqseq1) bivcol(brewer.seqseq2) bivcol(census.blueyellow) bivcol(stevens.bluered) bivcol(stevens.greenblue) bivcol(stevens.pinkblue) bivcol(stevens.pinkgreen) bivcol(stevens.purplegold) bivcol(tolochko.redblue) bivcol(vsup.redblue, nx=8) par(op)"},{"path":"https://kwstat.github.io/pals/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Wright. Author, maintainer, copyright holder.","code":""},{"path":"https://kwstat.github.io/pals/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wright K (2024). pals: Color Palettes, Colormaps, Tools Evaluate . R package version 1.9, https://kwstat.github.io/pals/.","code":"@Manual{,   title = {pals: Color Palettes, Colormaps, and Tools to Evaluate Them},   author = {Kevin Wright},   year = {2024},   note = {R package version 1.9},   url = {https://kwstat.github.io/pals/}, }"},{"path":"https://kwstat.github.io/pals/index.html","id":"pals-","dir":"","previous_headings":"","what":"Color Palettes, Colormaps, and Tools to Evaluate Them","title":"Color Palettes, Colormaps, and Tools to Evaluate Them","text":"Homepage: https://kwstat.github.io/pals Repository: https://github.com/kwstat/pals Color Palettes, Colormaps, Tools Evaluate ","code":""},{"path":"https://kwstat.github.io/pals/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Color Palettes, Colormaps, and Tools to Evaluate Them","text":"Extensive collection colormaps palettes. Multiple tools evaluate colormaps. Conscientious memory use. Consistency: palettes colormaps functions, lower-case names.","code":""},{"path":"https://kwstat.github.io/pals/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Color Palettes, Colormaps, and Tools to Evaluate Them","text":"","code":"# Install the released version from CRAN: install.packages(\"pals\")  # Install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"kwstat/pals\")"},{"path":"https://kwstat.github.io/pals/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Color Palettes, Colormaps, and Tools to Evaluate Them","text":"Tools testing colormap palette effectiveness. Catalog colormaps palettes included package.","code":""},{"path":"https://kwstat.github.io/pals/index.html","id":"similar-packages","dir":"","previous_headings":"","what":"Similar packages","title":"Color Palettes, Colormaps, and Tools to Evaluate Them","text":"See paletteer package https://github.com/EmilHvitfeldt/paletteer","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Bivariate palettes — bivariate","title":"Bivariate palettes — bivariate","text":"Color palettes designed bivariate choropleth maps.","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bivariate palettes — bivariate","text":"","code":"arc.bluepink(n = 9)  brewer.qualbin(n = 6)  brewer.divbin(n = 6)  brewer.divseq(n = 9)  brewer.qualseq(n = 9)  brewer.divdiv(n = 9)  brewer.seqseq1(n = 9)  brewer.seqseq2(n = 9)  census.blueyellow(n = 9)  tolochko.redblue(n = 9)  stevens.pinkgreen(n = 9)  stevens.bluered(n = 9)  stevens.pinkblue(n = 9)  stevens.greenblue(n = 9)  stevens.purplegold(n = 9)  vsup.viridis(n = 32)  vsup.redblue(n = 32)"},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bivariate palettes — bivariate","text":"n Number colors return.","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bivariate palettes — bivariate","text":"vector colors hex strings.","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bivariate palettes — bivariate","text":"many palette names, color upper left corner given first, color lower right corner given second. `brewer.*` palettes use `bin` (binary), `div` (diverging), `qual` (qualitative), `seq` (sequential) horizontal vertical directions. `arc.bluepink` palette uses white lower-left corner, makes difficult see difference low values missing data maps. `census.blueyellow` palette slightly different, one direction uses lightness, direction uses hue (yellow, green, blue). `vsup.*` palettes Value-Suppressing Uncertainty Palettes. strongly discourage using `vsup.viridis`, horizontal axis changes brightness, confounded changes brightness vertical axis. palettes deliberately chosen discrete. Bivariate color palettes can difficult use interpret. Please careful.","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bivariate palettes — bivariate","text":"Joshua Stevens. http://www.joshuastevens.net/cartography/make--bivariate-choropleth-map/ Cindy Brewer. http://www.personal.psu.edu/cab38/ColorSch/Schemes.html Michael Correll Dominik Moritz Jeffrey Heer. (2018). Value-Suppressing Uncertainty Palettes. https://github.com/uwdata/papers-vsup Robin Tolochko. http://tolomaps.tumblr.com/post/131671267233/creating--bivariate-choropleth-color-scheme Aileen Buckley. https://www.slideshare.net/aileenbuckley/arc-gis-bivariate-mapping-tools-28903069 https://www.census.gov/population/www/cen2000/atlas/ Total Population, p. 4.","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bivariate palettes — bivariate","text":"Palette colors various authors. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bivariate palettes — bivariate","text":"","code":"bivcol <- function(pal, nx=3, ny=3){   tit <- substitute(pal)   if(is.function(pal)) pal <- pal()   ncol <- length(pal)   if(missing(nx)) nx <- sqrt(ncol)   if(missing(ny)) ny <- nx   image(matrix(1:ncol, nrow=ny), axes=FALSE, col=pal)   mtext(tit) } op <- par(mfrow=c(4,4), mar=c(1,1,2,1)) bivcol(arc.bluepink) bivcol(brewer.divbin, nx=3) bivcol(brewer.divdiv) bivcol(brewer.divseq) bivcol(brewer.qualbin, nx=3) bivcol(brewer.qualseq) bivcol(brewer.seqseq1) bivcol(brewer.seqseq2) bivcol(census.blueyellow) bivcol(stevens.bluered) bivcol(stevens.greenblue) bivcol(stevens.pinkblue) bivcol(stevens.pinkgreen) bivcol(stevens.purplegold) bivcol(tolochko.redblue) bivcol(vsup.redblue, nx=8)  par(op)"},{"path":"https://kwstat.github.io/pals/reference/brewer.html","id":null,"dir":"Reference","previous_headings":"","what":"ColorBrewer palettes — brewer","title":"ColorBrewer palettes — brewer","text":"functions provide unified access ColorBrewer palettes.","code":""},{"path":"https://kwstat.github.io/pals/reference/brewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ColorBrewer palettes — brewer","text":"","code":"brewer.blues(n)  brewer.bugn(n)  brewer.bupu(n)  brewer.gnbu(n)  brewer.greens(n)  brewer.greys(n)  brewer.oranges(n)  brewer.orrd(n)  brewer.pubu(n)  brewer.pubugn(n)  brewer.purd(n)  brewer.purples(n)  brewer.rdpu(n)  brewer.reds(n)  brewer.ylgn(n)  brewer.ylgnbu(n)  brewer.ylorbr(n)  brewer.ylorrd(n)  brewer.brbg(n)  brewer.piyg(n)  brewer.prgn(n)  brewer.puor(n)  brewer.rdbu(n)  brewer.rdgy(n)  brewer.rdylbu(n)  brewer.rdylgn(n)  brewer.spectral(n)  brewer.accent(n)  brewer.dark2(n)  brewer.paired(n)  brewer.pastel1(n)  brewer.pastel2(n)  brewer.set1(n)  brewer.set2(n)  brewer.set3(n)"},{"path":"https://kwstat.github.io/pals/reference/brewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ColorBrewer palettes — brewer","text":"n number colors display palette functions.","code":""},{"path":"https://kwstat.github.io/pals/reference/brewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ColorBrewer palettes — brewer","text":"vector colors.","code":""},{"path":"https://kwstat.github.io/pals/reference/brewer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ColorBrewer palettes — brewer","text":"palette names begin 'brewer' make easier use auto-completion.","code":""},{"path":"https://kwstat.github.io/pals/reference/brewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ColorBrewer palettes — brewer","text":"","code":"# Sequential pal.bands(brewer.blues, brewer.bugn, brewer.bupu, brewer.gnbu, brewer.greens,           brewer.greys, brewer.oranges, brewer.orrd, brewer.pubu, brewer.pubugn,           brewer.purd, brewer.purples, brewer.rdpu, brewer.reds, brewer.ylgn,           brewer.ylgnbu, brewer.ylorbr, brewer.ylorrd)   # Diverging pal.bands(brewer.brbg, brewer.piyg, brewer.prgn, brewer.puor, brewer.rdbu,           brewer.rdgy, brewer.rdylbu, brewer.rdylgn, brewer.spectral)   # Qualtitative pal.bands(brewer.accent(8), brewer.dark2(8), brewer.paired(12), brewer.pastel1(9),           brewer.pastel2(8), brewer.set1(9), brewer.set2(8), brewer.set3(10),           labels=c(\"brewer.accent\", \"brewer.dark2\", \"brewer.paired\", \"brewer.pastel1\",           \"brewer.pastel2\", \"brewer.set1\", \"brewer.set2\", \"brewer.set3\"))   if (FALSE) { # \\dontrun{  # Sequential pal.test(brewer.blues) pal.test(brewer.bugn) pal.test(brewer.bupu) pal.test(brewer.gnbu) pal.test(brewer.greens) pal.test(brewer.greys) pal.test(brewer.oranges) pal.test(brewer.orrd)  pal.test(brewer.pubu) # good pal.test(brewer.pubugn) # good pal.test(brewer.purd) pal.test(brewer.purples) pal.test(brewer.rdpu) pal.test(brewer.reds) pal.test(brewer.ylgn) pal.test(brewer.ylgnbu) pal.test(brewer.ylorbr) pal.test(brewer.ylorrd)  # Diverging, max n=11 colors pal.test(brewer.brbg) pal.test(brewer.piyg) pal.test(brewer.prgn) pal.test(brewer.puor) pal.test(brewer.rdbu) pal.test(brewer.rdgy) pal.test(brewer.rdylbu) pal.test(brewer.rdylgn) pal.test(brewer.spectral)  # Qualtitative. These are weird...don't do this pal.test(brewer.accent) pal.test(brewer.dark2) pal.test(brewer.paired) pal.test(brewer.pastel1) pal.test(brewer.pastel2) pal.test(brewer.set1) pal.test(brewer.set2) pal.test(brewer.set3)  # Need to move these to 'tests'          pal.bands(brewer.accent(3), brewer.accent(4), brewer.accent(5), brewer.accent(6),           brewer.accent(7), brewer.accent(8), brewer.accent(9), brewer.accent(10),           brewer.accent(11), brewer.accent(12)) #brewer.purd(1) # Should err #brewer.purd(2) # Should err brewer.purd(3) brewer.purd(9) brewer.purd(25) pal.bands(brewer.purd(3), brewer.purd(4), brewer.purd(5), brewer.purd(6),           brewer.purd(7), brewer.purd(8), brewer.purd(9), brewer.purd(10),           brewer.purd(11), brewer.purd(12), brewer.purd(13), brewer.purd(14),           brewer.purd(15), brewer.purd(100)) } # }"},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Miscellaneous colormaps — continuous","title":"Miscellaneous colormaps — continuous","text":"Colormaps designed continuous data.","code":""},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Miscellaneous colormaps — continuous","text":"","code":"cubehelix(n = 25, start = 0.5, r = -1.5, hue = 1, gamma = 1)  gnuplot(n = 25, trim = 0.1)  tol.rainbow(n = 25, manual = TRUE)  jet(n = 25)  parula(n = 25)  turbo(n = 25)  coolwarm(n = 25)  warmcool(n = 25)  cividis(n = 25)"},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Miscellaneous colormaps — continuous","text":"n Number colors return. start Start angle (radians) helix r Number rotations helix hue Saturation colors, 0 = grayscale, 1 = fully saturated gamma gamma < 1 emphasizes low intensity values, gamma > 1 emphasizes high intensity values trim Proportion tail colors trim, default 0.1 manual TRUE, return manually-calibrated colors.","code":""},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Miscellaneous colormaps — continuous","text":"vector colors.","code":""},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Miscellaneous colormaps — continuous","text":"coolwarm 'warmcool' palette Moreland (2009) colorblind safe. transition gray smooth, reduce Mach banding. cubehelix palette sometimes used astronomy. Images using palette look monotonically increasing human eye printed black white. palette named 'cubehelix' r,g,b values produced can visualised squashed helix around diagonal black (0,0,0) white (1,1,1) r,g,b color cube. gnuplot palette uses black-blue-pink-yellow colors. palette looks good printed black white. Identical sp::bpy.colors palette. jet palette used provided historical interest. code palette comes example section colorRampPalette. 'jet' palette gained popularity default colormap older versions Matlab. unevenness gradient, jet exaggerate features data minimize features. parula palette similar default Matlab palette. Specific colors adapted BIDS/colormap package. tol.rainbow palette Tol (2012) dark rainbow palette purple red works much better standard rainbow palettes colorblind people. 1 <= n <= 13, manually-chosen equidistant rainbow colors used, distances defined CIEDE2000 color difference. 14 <= n <= 21, manually-chosen triplets colours used. n > 21 manual=FALSE, palette computes colors according Equation 3 Tol (2012). cividis palette  Jamie R. Nuñez, Christopher R. Anderton, Ryan S. Renslow, variation viridis less colorful. turbo palette Mikhailov, similar jet, avoids artificial color banding plagues jet. See also tol.rainbow.","code":""},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Miscellaneous colormaps — continuous","text":"Dave . Green. (2011). colour scheme display astronomical intensity images. Bull. Astr. Soc. India, 39, 289-295. http://arxiv.org/abs/1108.5083 http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/ Kenneth Moreland. (2009). Diverging Color Maps Scientific Visualization. Proceedings 5th International Symposium Visual Computing. http://www.kennethmoreland.com/color-maps/ http://dx.doi.org/10.1007/978-3-642-10520-3_9 Paul Tol (2012). Color Schemes. SRON technical note, SRON/EPS/TN/09-002. https://personal.sron.nl/~pault/ Favorite Colormap. (gnuplot) https://web.archive.org/web/20040119000943/http://www.ihe.uni-karlsruhe.de/mitarbeiter/vonhagen/palette.en.html MathWorks documentation. http://www.mathworks.com/help/matlab/ref/colormap.html BIDS/colormap. https://github.com/BIDS/colormap/blob/master/parula.py Jamie R. Nuñez, Christopher R. Anderton, Ryan S. Renslow (2017). optimized colormap scientific community. https://arxiv.org/abs/1712.01662 Anton Mikhailov, Turbo, Improved Rainbow Colormap Visualization (2019). https://ai.googleblog.com/2019/08/turbo-improved-rainbow-colormap-.html","code":""},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Miscellaneous colormaps — continuous","text":"Palette colors various authors. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Miscellaneous colormaps — continuous","text":"","code":"pal.bands(coolwarm, cubehelix, gnuplot, parula, cividis, jet, turbo, tol.rainbow)   if(FALSE){  # ----- coolwarm ----- pal.test(coolwarm) # Minimal mach banding # Note the mach banding gray line in the following: # pal.volcano(colorRampPalette(c(\"#3B4CC0\", \"lightgray\", \"#B40426\")))  # ----- cubehelix ----- # Full range of colors. Pink is overwhelming. Not the best choice. pal.test(cubehelix)  # Mostly blues/greens. Dark areas severely too black.  # Similar, but more saturated. See: http://inversed.ru/Blog_2.htm pal.volcano(function(n) cubehelix(n, start=.25, r=-.67, hue=1.5))  # Dark colors totally lose structure of the volcano peak. op <- par(mfrow=c(2,2), mar=c(2,2,2,2)) image(volcano, col = cubehelix(51), asp = 1, axes=0, main=\"cubehelix\") image(volcano, col = cubehelix(51, start=.25, r=-.67, hue=1.5), asp = 1, axes=0, main=\"cubehelix\") image(volcano, col = rev(cubehelix(51)), asp = 1, axes=0, main=\"cubehelix\") image(volcano, col = rev(cubehelix(51, start=.25, r=-.67, hue=1.5)),                                     asp = 1, axes=0, main=\"cubehelix\") par(op)  # ----- gnuplot ----- pal.test(gnuplot)  # ----- jet ----- # pal.volcano(jet) pal.test(jet)  # ----- parula ----- # pal.volcano(parula) pal.test(parula)  # ----- tol.rainbow ----- # pal.volcano(tol.rainbow) pal.test(tol.rainbow)  }   # ----- cividis ----- # pal.volcano(cividis) pal.test(cividis)"},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete palettes — discrete","title":"Discrete palettes — discrete","text":"Color palettes designed discrete, categorical data small number categories.","code":""},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete palettes — discrete","text":"","code":"alphabet(n = 26)  alphabet2(n = 26)  cols25(n = 25)  glasbey(n = 32)  kelly(n = 22)  polychrome(n = 36)  stepped(n = 24)  stepped2(n = 20)  stepped3(n = 20)  okabe(n = 8)  tableau20(n = 20)  tol(n = 12)  tol.groundcover(n = 14)  trubetskoy(n = 22)  watlington(n = 16)"},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete palettes — discrete","text":"n Number colors return.","code":""},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete palettes — discrete","text":"vector colors hex strings.","code":""},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete palettes — discrete","text":"alphabet palette 26 distinguishable colors logical names starting English alphabet letters , B, ... Z. palette based work Green-Armytage (2010), uses names 'orange' instead 'orpiment', 'magenta' instead 'mallow'. alphabet2 palette uses similar idea slightly different colors slightly different names.  palette comes Polychrome package, generated createPalette function manually arranged named. cols25 palette created experimentally Wright (unpublished) create set colors distinct. glasbey palette Glasbey et al (2007) 32 colors maximally distinct. Glasbey 'white' second color, version palette, color 'white' moved end, actually light-gray, #F2F3F4. kelly palette 22 colors maximize contrast colors set colors chosen sequential order. Kelly paid attention needs people color blindness.  first nine colors work well people people normal vision. Kelly provide RGB color values, paper black--white. color image Kelly palette can found Green-Armytage (2010). color 'white' re-defined light-gray, #F2F3F4. Commentary: think kelly palette -abundance orange-ish colors, purples distinct, color 22 (olive green) almost identical color 2 (black), etc.  Trubetskoy says \"towards bottom  Kelly's list things get complicated. orange yellow, purplish red,  yellowish brown reddish orange seemed blend together\". okabe palette design (1) clear colorblind non-colorblind people, (2) vividly colored, (3) good screen printed. color-blind simulation tools R suggest palette useful hoped. polychrome palette also Polychrome package. Colors given name ISCC-NBS standard. stepped palette 24 colors (5 hues, 4 levels within hue, plus 4 shades gray) useful showing varying levels within categories. Inspired (http://geog.uoregon.edu/datagraphics/color_scales.htm), order better separate colors RGB space, red hue 0 moved hue 350, green hue 80 moved hue 90. number colors within hue reduced 5 4, gray shades added. stepped2 stepped3 'vega' package https://github.com/vega/vega/wiki/Scales. tableau20 palette 10 pairs dark/light colors used Tableau software. trubetskoy palette 20 colors, plus black white. colors designed easily distinguishable, tastefully luminant, intuitively named, supplied RGB colors. https://sashamaps.net/docs/resources/20-colors/ tol palette 12 colors Paul Tol. watlington palette 16 colors. color 'white' re-defined light-gray, #F2F3F4.","code":""},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discrete palettes — discrete","text":"Robert M. Boynton. (1989) Eleven Colors Almost Never Confused. Proc. SPIE 1077, Human Vision, Visual Processing, Digital Display, 322-332. http://doi.org/10.1117/12.952730 Kevin R. Coombes (2016). Polychrome. https://rdrr.io/rforge/Polychrome/man/alphabet.html Chris Glasbey, Gerie van der Heijden, Vivian F. K. Toh, Alision Gray (2007). Colour Displays Categorical Images. Color Research Application, 32, 304-309. http://doi.org/10.1002/col.20327 P. Green-Armytage (2010): Colour Alphabet Limits Colour Coding. Colour: Design & Creativity (5) (2010): 10, 1-23. www.aic-color.org/journal/v5/jaic_v5_06.pdf K. Kelly (1965): Twenty-two colors maximum contrast. Color Eng., 3(6), 1965. http://www.iscc.org/pdf/PC54_1724_001.pdf Masataka Okabe Kei Ito (2002). Color Universal Design (CUD) - make figures presentations friendly Colorblind people. http://jfly.iam.u-tokyo.ac.jp/color/ Paul Tol (2012). Color Schemes. SRON technical note, SRON/EPS/TN/09-002. https://personal.sron.nl/~pault/ Sasha Trubetskoy (2017). List 20 Simple, Distinct Colors. https://sashamaps.net/docs/resources/20-colors/ John Watlington. Optimum 16 Color Palette. http://alumni.media.mit.edu/~wad/color/palette.html Color Schemes Appropriate Scientific Data Graphics http://geog.uoregon.edu/datagraphics/color_scales.htm","code":""},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Discrete palettes — discrete","text":"Palette colors various authors. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete palettes — discrete","text":"","code":"pal.bands(alphabet, alphabet2, cols25, glasbey, kelly, okabe, polychrome,   tableau20, tol, watlington) #> Only 26 colors are available with 'alphabet' #> Only 26 colors are available with 'alphabet2' #> Only 25 colors are available with 'cols25'. #> Only 32 colors are available with 'glasbey'. #> Only 22 colors are available with 'kelly'. #> Only 8 colors are available with 'okabe'. #> Only 36 colors are available with 'polychrome'. #> Only 20 colors are available with 'tableau20'. #> Only 12 colors are available with 'tol' #> Only 16 colors are available with 'watlington'.  pal.bands(stepped, stepped2, stepped3) #> Only 24 colors are available with 'stepped' #> Only 20 colors are available with 'stepped2'. #> Only 20 colors are available with 'stepped3'.  pal.bands(tol.groundcover) #> Only 14 colors are available with 'tol.groundcover'   if (FALSE) { # \\dontrun{ alphabet() alphabet()[\"jade\"] pal.bands(alphabet,n=26) pal.heatmap(alphabet) # pal.cube(alphabet)  pal.heatmap(alphabet2)  pal.heatmap(cols25)  pal.heatmap(glasbey()) # pal.cube(glasbey, n=32) # Blues are close together  pal.heatmap(kelly()) # too many orange/pink colors  pal.safe(okabe()) # not great  pal.heatmap(polychrome)  pal.heatmap(stepped, n=24)  pal.heatmap(stepped2, n=20)  pal.heatmap(stepped3, n=20)  pal.heatmap(tol, 12)  pal.heatmap(watlington(16)) } # }"},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":null,"dir":"Reference","previous_headings":"","what":"Peter Kovesi's perceptually uniform colormaps — kovesi","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"Peter Kovesi's perceptually uniform colormaps","code":""},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"","code":"kovesi.cyclic_grey_15_85_c0(n)  kovesi.cyclic_grey_15_85_c0_s25(n)  kovesi.cyclic_mrybm_35_75_c68(n)  kovesi.cyclic_mrybm_35_75_c68_s25(n)  kovesi.cyclic_mygbm_30_95_c78(n)  kovesi.cyclic_mygbm_30_95_c78_s25(n)  kovesi.cyclic_wrwbw_40_90_c42(n)  kovesi.cyclic_wrwbw_40_90_c42_s25(n)  kovesi.diverging_isoluminant_cjm_75_c23(n)  kovesi.diverging_isoluminant_cjm_75_c24(n)  kovesi.diverging_isoluminant_cjo_70_c25(n)  kovesi.diverging_linear_bjr_30_55_c53(n)  kovesi.diverging_linear_bjy_30_90_c45(n)  kovesi.diverging_rainbow_bgymr_45_85_c67(n)  kovesi.diverging_bkr_55_10_c35(n)  kovesi.diverging_bky_60_10_c30(n)  kovesi.diverging_bwr_40_95_c42(n)  kovesi.diverging_bwr_55_98_c37(n)  kovesi.diverging_cwm_80_100_c22(n)  kovesi.diverging_gkr_60_10_c40(n)  kovesi.diverging_gwr_55_95_c38(n)  kovesi.diverging_gwv_55_95_c39(n)  kovesi.isoluminant_cgo_70_c39(n)  kovesi.isoluminant_cgo_80_c38(n)  kovesi.isoluminant_cm_70_c39(n)  kovesi.linear_bgy_10_95_c74(n)  kovesi.linear_bgyw_15_100_c67(n)  kovesi.linear_bgyw_15_100_c68(n)  kovesi.linear_blue_5_95_c73(n)  kovesi.linear_blue_95_50_c20(n)  kovesi.linear_bmw_5_95_c86(n)  kovesi.linear_bmw_5_95_c89(n)  kovesi.linear_bmy_10_95_c71(n)  kovesi.linear_bmy_10_95_c78(n)  kovesi.linear_gow_60_85_c27(n)  kovesi.linear_gow_65_90_c35(n)  kovesi.linear_green_5_95_c69(n)  kovesi.linear_grey_0_100_c0(n)  kovesi.linear_grey_10_95_c0(n)  kovesi.linear_kry_5_95_c72(n)  kovesi.linear_kry_5_98_c75(n)  kovesi.linear_kryw_5_100_c64(n)  kovesi.linear_kryw_5_100_c67(n)  kovesi.linear_ternary_blue_0_44_c57(n)  kovesi.linear_ternary_green_0_46_c42(n)  kovesi.linear_ternary_red_0_50_c52(n)  kovesi.rainbow_bgyr_35_85_c72(n)  kovesi.rainbow(n)  kovesi.rainbow_bgyr_35_85_c73(n)  kovesi.rainbow_bgyrm_35_85_c69(n)  kovesi.rainbow_bgyrm_35_85_c71(n)"},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"n number colors display palette functions.","code":""},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"vector colors.","code":""},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"colormaps named using Peter Kovesi's naming scheme: <category>_<huesequence>_<lightnessrange>_c<meanchroma>_s<colorshift> Note: kovesi.rainbow another name rainbow_bgyr_35_85_c72.","code":""},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"Peter Kovesi (2016). CET Perceptually Uniform Colour Maps. http://peterkovesi.com/projects/colourmaps/ Peter Kovesi (2015). Good Colour Maps: Design . Arxiv. https://arxiv.org/abs/1509.03700 https://bokeh.github.io/colorcet/","code":""},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"Colormaps Peter Kovesi. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/kovesi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Peter Kovesi's perceptually uniform colormaps — kovesi","text":"","code":"if(FALSE){ pal.bands(kovesi.cyclic_grey_15_85_c0, kovesi.cyclic_grey_15_85_c0_s25, kovesi.cyclic_mrybm_35_75_c68, kovesi.cyclic_mrybm_35_75_c68_s25, kovesi.cyclic_mygbm_30_95_c78, kovesi.cyclic_mygbm_30_95_c78_s25, kovesi.cyclic_wrwbw_40_90_c42, kovesi.cyclic_wrwbw_40_90_c42_s25, kovesi.diverging_isoluminant_cjm_75_c23, kovesi.diverging_isoluminant_cjm_75_c24, kovesi.diverging_isoluminant_cjo_70_c25, kovesi.diverging_linear_bjr_30_55_c53, kovesi.diverging_linear_bjy_30_90_c45, kovesi.diverging_rainbow_bgymr_45_85_c67, kovesi.diverging_bkr_55_10_c35, kovesi.diverging_bky_60_10_c30, kovesi.diverging_bwr_40_95_c42, kovesi.diverging_bwr_55_98_c37, kovesi.diverging_cwm_80_100_c22, kovesi.diverging_gkr_60_10_c40, kovesi.diverging_gwr_55_95_c38, kovesi.diverging_gwv_55_95_c39, kovesi.isoluminant_cgo_70_c39, kovesi.isoluminant_cgo_80_c38, kovesi.isoluminant_cm_70_c39, kovesi.linear_bgy_10_95_c74, kovesi.linear_bgyw_15_100_c67, kovesi.linear_bgyw_15_100_c68, kovesi.linear_blue_5_95_c73, kovesi.linear_blue_95_50_c20, kovesi.linear_bmw_5_95_c86, kovesi.linear_bmw_5_95_c89, kovesi.linear_bmy_10_95_c71, kovesi.linear_bmy_10_95_c78, kovesi.linear_gow_60_85_c27, kovesi.linear_gow_65_90_c35, kovesi.linear_green_5_95_c69, kovesi.linear_grey_0_100_c0, kovesi.linear_grey_10_95_c0, kovesi.linear_kry_5_95_c72, kovesi.linear_kry_5_98_c75, kovesi.linear_kryw_5_100_c64, kovesi.linear_kryw_5_100_c67, kovesi.linear_ternary_blue_0_44_c57, kovesi.linear_ternary_green_0_46_c42, kovesi.linear_ternary_red_0_50_c52, kovesi.rainbow_bgyr_35_85_c72, kovesi.rainbow_bgyr_35_85_c73, kovesi.rainbow_bgyrm_35_85_c69, kovesi.rainbow_bgyrm_35_85_c71) }"},{"path":"https://kwstat.github.io/pals/reference/matplotlib.html","id":null,"dir":"Reference","previous_headings":"","what":"Matplotlib colormaps — matplotlib","title":"Matplotlib colormaps — matplotlib","text":"Viridis family colormaps found Matplotlib. Designed perceptually uniform, generally dark useful.","code":""},{"path":"https://kwstat.github.io/pals/reference/matplotlib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matplotlib colormaps — matplotlib","text":"","code":"magma(n)  inferno(n)  plasma(n)  viridis(n)"},{"path":"https://kwstat.github.io/pals/reference/matplotlib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matplotlib colormaps — matplotlib","text":"n Number colors return","code":""},{"path":"https://kwstat.github.io/pals/reference/matplotlib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matplotlib colormaps — matplotlib","text":"vector colors","code":""},{"path":"https://kwstat.github.io/pals/reference/matplotlib.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Matplotlib colormaps — matplotlib","text":"Palettes Matteo Niccoli. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/matplotlib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matplotlib colormaps — matplotlib","text":"","code":"pal.bands(magma, inferno, plasma, viridis)"},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":null,"dir":"Reference","previous_headings":"","what":"Matteo Niccoli's perceptually uniform colormaps — niccoli","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"colormaps intended perceptually balanced traditional rainbow-like palettes.","code":""},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"","code":"cubicyf(n)  isol(n)  cubicl(n)  linearl(n)  linearlhot(n)"},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"n Number colors return","code":""},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"vector colors","code":""},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"isol(): Lab-based isoluminant rainbow constant luminance L*=60. Best choice displaying interval data external lighting. best displaying interval data external lighting. allow lighting provide shading highlight details interest. lighting combined colormap luminance function associated - even simple linear increase confuse viewer. linearl(): Lab-based linear lightness rainbow. linear lightness modification Matlab's 'hot' palette. interval data displayed without external lighting. 100 linlhot(): Linear lightness modification Matlab's hot color palette. interval data displayed without external lighting 100 cubicyf(): Lab-based rainbow scheme cubic-law luminance(default) interval data displayed without external lighting 100 cubicl(): Lab-based rainbow scheme cubic-law luminance interval data displayed without external lighting Similar cubicyf(), red high end (modest deviation 100","code":""},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"Matteo Niccoli (2010). Perceptually improved colormaps. http://www.mathworks.com/matlabcentral/fileexchange/28982-perceptually-improved-colormaps Color definitions : http://www.mathworks.com/matlabcentral/fileexchange/28982-perceptually-improved-colormaps/content/pmkmp/pmkmp.m https://mycarta.wordpress.com/2012/05/29/-rainbow--dead-long-live--rainbow-series-outline/","code":""},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"Palettes Matteo Niccoli. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/niccoli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matteo Niccoli's perceptually uniform colormaps — niccoli","text":"","code":"pal.bands(cubicyf,cubicl,isol,linearl,linearlhot)  pal.test(cubicyf) # purple blue green  pal.test(cubicl) # purple blue green orange  # pal.test(isol) # magenta blue green red. Poor in green area. # pal.test(linearl) # black blue green tan. Poor in black area. # pal.test(linearlhot) # black red yellow"},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":null,"dir":"Reference","previous_headings":"","what":"Oceanography perceptually uniform colormaps — ocean","title":"Oceanography perceptually uniform colormaps — ocean","text":"palettes designed collection perceptually uniform colormaps designed oceanographic data display.","code":""},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oceanography perceptually uniform colormaps — ocean","text":"","code":"ocean.algae(n)  ocean.deep(n)  ocean.dense(n)  ocean.gray(n)  ocean.haline(n)  ocean.ice(n)  ocean.matter(n)  ocean.oxy(n)  ocean.phase(n)  ocean.solar(n)  ocean.thermal(n)  ocean.turbid(n)  ocean.balance(n)  ocean.curl(n)  ocean.delta(n)  ocean.amp(n)  ocean.speed(n)  ocean.tempo(n)"},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oceanography perceptually uniform colormaps — ocean","text":"n Number colors","code":""},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Oceanography perceptually uniform colormaps — ocean","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Oceanography perceptually uniform colormaps — ocean","text":"'oxy' palette include gray shown Thyng (2016). 'balance', 'delta', 'curl' palettes originally given 2*256 colors (256 left right half palette) downsampled 256 colors. palettes matplotlib converted RGB codes hexadecimal strings use package.","code":""},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Oceanography perceptually uniform colormaps — ocean","text":"Thyng, K.M., C.. Greene, R.D. Hetland, H.M. Zimmerle, S.F. DiMarco (2016). True colors oceanography: Guidelines effective accurate colormap selection. Oceanography, 29(3):9-13, http://dx.doi.org/10.5670/oceanog.2016.66.","code":""},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Oceanography perceptually uniform colormaps — ocean","text":"Palette colors Kristen Thyng. R code Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/ocean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Oceanography perceptually uniform colormaps — ocean","text":"","code":"pal.bands(ocean.thermal, ocean.haline, ocean.solar, ocean.ice, ocean.gray,           ocean.oxy, ocean.deep, ocean.dense, ocean.algae, ocean.matter,           ocean.turbid, ocean.speed, ocean.amp, ocean.tempo, ocean.phase,           ocean.balance, ocean.delta, ocean.curl, main=\"Ocean palettes\")   if (FALSE) { # \\dontrun{ pal.test(ocean.thermal) pal.test(ocean.haline) # better than parula! pal.test(ocean.solar) pal.test(ocean.ice) pal.test(ocean.gray) pal.test(ocean.oxy) pal.test(ocean.deep) pal.test(ocean.dense) pal.test(ocean.algae) pal.test(ocean.matter) pal.test(ocean.turbid) pal.test(ocean.speed) pal.test(ocean.amp) pal.test(ocean.tempo) pal.test(ocean.phase) pal.test(ocean.balance) pal.test(ocean.delta) pal.test(ocean.curl) } # }"},{"path":"https://kwstat.github.io/pals/reference/pal.bands.html","id":null,"dir":"Reference","previous_headings":"","what":"Show palettes and colormaps as colored bands — pal.bands","title":"Show palettes and colormaps as colored bands — pal.bands","text":"Show palettes colored bands.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show palettes and colormaps as colored bands — pal.bands","text":"","code":"pal.bands(   ...,   n = 100,   labels = NULL,   main = NULL,   gap = 0.1,   sort = \"none\",   show.names = TRUE )"},{"path":"https://kwstat.github.io/pals/reference/pal.bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show palettes and colormaps as colored bands — pal.bands","text":"... Palettes/colormaps, either (1) vectors colors (2) function returning vector colors. n number colors display palette functions. labels Labels palettes main Title top page. gap Vertical gap bars, default 0.1 sort sort=\"none\", palettes sorted. sort=\"hue\", palettes sorted hue. sort=\"luminance\", palettes sorted luminance. show.names TRUE, show color names","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.bands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show palettes and colormaps as colored bands — pal.bands","text":"look : 1. good discrete palette distinct colors. 2. good continuous colormap show boundaries colors. example, rainbow() palette poor, showing bright lines yellow, cyan, pink.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.bands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show palettes and colormaps as colored bands — pal.bands","text":"","code":"pal.bands(c('red','white','blue'), rainbow)   op=par(mar=c(0,5,3,1)) pal.bands(cubehelix, gnuplot, jet, tol.rainbow, inferno,   magma, plasma, viridis, parula, n=200, gap=.05)  par(op)  # Examples of sorting labs=c('alphabet','alphabet2', 'glasbey','kelly','polychrome', 'watlington') op=par(mar=c(0,5,3,1)) pal.bands(alphabet(), alphabet2(), glasbey(), kelly(),   polychrome(), watlington(), sort=\"hue\",   labels=labs, main=\"sorted by hue\")  par(op) pal.bands(alphabet(), alphabet2(), glasbey(), kelly(),   polychrome(), watlington(), sort=\"luminance\",   labels=labs, main=\"sorted by luminance\")"},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"amount red, green, blue, gray colors shown.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"","code":"pal.channels(pal, n = 150, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"pal palette function vector colors. n number colors display palette functions. main Main title.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"look : 1. Sequential data usually shown colormap smoothly increasing lightness, shown gray line.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the red, green, blue, gray amount in colors of a palette — pal.channels","text":"","code":"pal.channels(parula)  pal.channels(coolwarm)  # pal.channels(glasbey) # Nonsensical."},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a palette with hierarchical clustering — pal.cluster","title":"Show a palette with hierarchical clustering — pal.cluster","text":"palette colors converted LUV coordinates clustering. (RGB coordinates available, recommended.)","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a palette with hierarchical clustering — pal.cluster","text":"","code":"pal.cluster(pal, n = 50, type = \"LUV\", main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a palette with hierarchical clustering — pal.cluster","text":"pal palette function vector colors. n number colors display palette functions. type Either \"LUV\" (default) \"RGB\". main Title display top test image","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a palette with hierarchical clustering — pal.cluster","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a palette with hierarchical clustering — pal.cluster","text":"look : Colors visually similar tend clustered together.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a palette with hierarchical clustering — pal.cluster","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a palette with hierarchical clustering — pal.cluster","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a palette with hierarchical clustering — pal.cluster","text":"","code":"pal.cluster(alphabet(), main=\"alphabet\")  pal.cluster(glasbey, main=\"glasbey\") # two royal blues are very similar #> Only 32 colors are available with 'glasbey'.  pal.cluster(kelly, main=\"kelly\") # two black-ish colors are very similar #> Only 22 colors are available with 'kelly'.  # pal.cluster(watlington, main=\"watlington\") # pal.cluster(coolwarm(15), main=\"coolwarm\") # curiously, grey clusters with blue"},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress a colormap function to fewer colors — pal.compress","title":"Compress a colormap function to fewer colors — pal.compress","text":"Compress colormap function fewer colors","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress a colormap function to fewer colors — pal.compress","text":"","code":"pal.compress(pal, n = 5, thresh = 2.5)"},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress a colormap function to fewer colors — pal.compress","text":"pal colormap function vector colors. n Initial number colors use basis. thresh Maximum allowable Lab distance original palette","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress a colormap function to fewer colors — pal.compress","text":"vector equally-spaced colors form 'basis' colormap.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compress a colormap function to fewer colors — pal.compress","text":"Colormap functions often defined many colors needed. function compresses colormap function sample colors can passed 'colorRampPalette' re-create original palette just-noticeable-difference. Colormaps defined smoothly varying ramp set colors often compress quite well. Colormaps defined functions may compress well.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compress a colormap function to fewer colors — pal.compress","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compress a colormap function to fewer colors — pal.compress","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.compress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress a colormap function to fewer colors — pal.compress","text":"","code":"# The 'cm.colors' palette in R compresses to only 3 colors cm2 <- pal.compress(cm.colors, n=3) pal.bands(cm.colors(255), colorRampPalette(cm2)(255), cm2, labels=c('original','compressed','basis'), main=\"cm.colors\")   # The 'heat.colors' palette needs 84 colors heat2 <- pal.compress(heat.colors, n=3) pal.bands(heat.colors(255), colorRampPalette(heat2)(255), heat2, labels=c('original','compressed','basis'), main=\"heat.colors\")   # The 'topo.colors' palette needs 249 colors because of the discontinuity # topo2 <- pal.compress(topo.colors, n=3) # pal.bands(topo.colors(255), colorRampPalette(topo2)(255), topo2, # labels=c('original','compressed','basis'), main=\"topo.colors\")  # smooth palettes usually easy to compress p1 <- coolwarm(255) cool2 <- pal.compress(coolwarm) p2 <- colorRampPalette(cool2)(255) pal.bands(p1, p2, cool2, labels=c('original','compressed', 'basis'), main=\"coolwarm\")  pal.maxdist(p1,p2) # 2.33 #> [1] 2.07927"},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"contrast sensitivity figure drawn function, spatial frequency increases left right contrast decreases bottom top.  bars figure appear taller middle image edges, creating upside-\"U\" shape, \"contrast sensitivity function\". perception curve depends viewing distance.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"","code":"pal.csf(pal, n = 150, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"pal continuous colormap function n number colors display palette functions. main Main title.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"look : 1. vertical bands visible across full vertical axis? 2. vertical bands blur together?","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"Izumi Ohzawa. Make Campbell-Robson Contrast Sensitivity Chart. http://ohzawa-lab.bpe.es.osaka-u.ac.jp/ohzawa-lab/izumi/CSF/A_JG_RobsonCSFchart.html Campbell, F. W. Robson, J. G. (1968). Application Fourier analysis visibility gratings. Journal Physiology, 197: 551-566.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.csf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a colormap with a Campbell-Robson Contrast Sensitivity Chart — pal.csf","text":"","code":"pal.csf(brewer.greys) # Classic example from psychology  pal.csf(parula)"},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":null,"dir":"Reference","previous_headings":"","what":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"palette converted RGB LUV coordinates plotted three-dimensional scatterplot. LUV space probably better, easier tweak colors hand RGB space.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"","code":"pal.cube(pal, n = 100, label = FALSE, type = \"RGB\")"},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"pal palette/colormap function vector colors. n number colors display palette functions. label TRUE, show color name/value plot type Either \"RGB\" (default) \"LUV\".","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"look : good palette colors spread somewhat uniformly 3D. Note: rgl package included \"Depends\" pals package can cause problems people.  might manually install rgl install.packages.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.cube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show one palette/colormap in three dimensional RGB or LUV space — pal.cube","text":"","code":"if (FALSE) { # \\dontrun{ pal.cube(cubehelix) pal.cube(glasbey, n=32) # RGB, blues are too close to each other pal.cube(glasbey, n=32, type=\"LUV\") pal.cube(cols25(25), type=\"LUV\", label=TRUE) # To open a second cube rgl.open() # Open a new RGL device rgl.bg(color = \"white\") # Setup the background color pal.cube(colors()[c(1:152, 254:260, 362:657)]) # All R non-grey colors } # }"},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure the pointwise distance between two palettes — pal.dist","title":"Measure the pointwise distance between two palettes — pal.dist","text":"Measure pointwise distance two palettes","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure the pointwise distance between two palettes — pal.dist","text":"","code":"pal.dist(pal1, pal2, n = 255)"},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure the pointwise distance between two palettes — pal.dist","text":"pal1 color palette (function vector) pal2 color palette (function vector) n Number colors use, default 255","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure the pointwise distance between two palettes — pal.dist","text":"vector n distances.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure the pointwise distance between two palettes — pal.dist","text":"distance two palettes (equal length) calculated pointwise using Lab color space.  'just noticeable difference' colors roughly 2.3.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure the pointwise distance between two palettes — pal.dist","text":"https://en.wikipedia.org/wiki/Color_difference","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure the pointwise distance between two palettes — pal.dist","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure the pointwise distance between two palettes — pal.dist","text":"","code":"pa0 <- c(\"#ff0000\",\"#00ff00\",\"#0000ff\") pa1 <- c(\"#fa0000\",\"#00fa00\",\"#0000fa\") # 2.4 pa2 <- c(\"#f40000\",\"#00f400\",\"#0000f4\") # 5.2 pal.dist(pa0,pa1) # 1.87, 2.36, 2.11 #> [1] 1.870682 2.360173 2.116649 pal.dist(pa0,pa2) # 4.12 5.20 4.68 #> [1] 4.124885 5.204223 4.667247 pal.bands(pa1,pa0,pa2, labels=c(\"1.87  2.36  2.11\",\"0\",\"4.12  5.20  4.68\")) title(\"Lab distances from middle palette\")"},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a palette/colormap with a random heatmap — pal.heatmap","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"Show palette/colormap random heatmap","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"","code":"pal.heatmap(pal, n = 25, miss = 0.05, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"pal palette function vector colors. n number squares vertically heatmap. miss Fraction squares missing values, default .05. main Main title","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a palette/colormap with a random heatmap — pal.heatmap","text":"","code":"pal.heatmap(brewer.paired, n=12)  pal.heatmap(coolwarm, n=12)  pal.heatmap(tol, n=12)  pal.heatmap(glasbey, n=32)  pal.heatmap(kelly, n=22, main=\"kelly\", miss=.25)"},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":null,"dir":"Reference","previous_headings":"","what":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"Draw heatmap palette. palette heatmap consists block randomly-chosen colors, plus block color random substitutions colors. missing value NA added palette colors.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"","code":"pal.heatmap2(..., n = 100, nc = 6, nr = 20, labels = NULL)"},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"... Palettes/colormaps, either (1) vectors colors (2) function returning vector colors. n number colors display palette functions. nc number columns color block. nr number rows color block. labels Vector labels palettes","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.heatmap2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show palettes/colormaps with comparison heatmaps — pal.heatmap2","text":"","code":"pal.heatmap2(watlington(16), tol.groundcover(14), brewer.rdylbu(11),   nc=6, nr=20,   labels=c(\"watlington\",\"tol.groundcover\",\"brewer.rdylbu\"))"},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a palette using a map of U.S. counties — pal.map","title":"Show a palette using a map of U.S. counties — pal.map","text":"look :","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a palette using a map of U.S. counties — pal.map","text":"","code":"pal.map(pal = brewer.paired, n = 12, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a palette using a map of U.S. counties — pal.map","text":"pal palette function vector colors. n Number colors return. main Main title","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a palette using a map of U.S. counties — pal.map","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a palette using a map of U.S. counties — pal.map","text":"1. regions distinct? 2. outliers within region distinct? Display palette choropleth map similar ColorBrewer. Broad bands color easy distinguish. palette allow visibility outlier counties larger regions? palette allow identification colors pattern complex (lower left corner map)? Notes. map shown ColorBrewer website SVG https://github.com/axismaps/colorbrewer/tree/master/map/map.svg contains class identifier polygon, 3 12 classes. Unfortunately, polygons identification (e.g. FIPS, county name). used identify.map function R manually define classes similar 12-class map ColorBrewer. proved tedious , maps 1-11 classes created combining classes 12-class map.  ColorBrewer website sometimes used strategy combine classes, always. 'outlier' counties 'random region' version similar 12-region map ColorBrewer, differences, mostly intentional. Also, map projection used different ColorBrewer.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a palette using a map of U.S. counties — pal.map","text":"http://www.personal.psu.edu/cab38/Pub_scans/Brewer_pubs.html Map based www.ColorBrewer.org, Cynthia . Brewer, Penn State.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a palette using a map of U.S. counties — pal.map","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a palette using a map of U.S. counties — pal.map","text":"","code":"pal.map(brewer.paired, main=\"brewer.paired\")  pal.map(parula)   if (FALSE) { # \\dontrun{ for(i in 3:12){   pal.map(n=i, main=i) } } # }"},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure the maximum distance between two palettes — pal.maxdist","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"Measure maximum distance two palettes","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"","code":"pal.maxdist(pal1, pal2, n = 255)"},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"pal1 color palette (function vector) pal2 color palette (function vector) n Number colors use, default 255","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"Numeric value maximum distance.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"distance two palettes (equal length) calculated pointwise using Lab color space.  'just noticeable difference' colors roughly 2.3.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"https://en.wikipedia.org/wiki/Color_difference","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.maxdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure the maximum distance between two palettes — pal.maxdist","text":"","code":"pa0 <- c(\"#ff0000\",\"#00ff00\",\"#0000ff\") pa1 <- c(\"#fa0000\",\"#00fa00\",\"#0000fa\") # 2.4 pa2 <- c(\"#f40000\",\"#00f400\",\"#0000f4\") # 5.2 pal.maxdist(pa0,pa1) # 2.36 #> [1] 2.360173 pal.maxdist(pa0,pa2) # 5.20 #> [1] 5.204223 pal.bands(pa1,pa0,pa2, labels=c(\"2.36\",\"0\",\"5.20\")) title(\"Maximum Lab distance from middle palette\")   # distance between colormap functions pal.maxdist(coolwarm,warmcool) #> [1] 101.6535"},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a palette/colormap for black/white and colorblind safety — pal.safe","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"single palette/colormap shown (1) without modifications (2) black--white photocopied (3) seen deutan color-blind (4) seen protan color-blind (5) seen tritan color-blind","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"","code":"pal.safe(pal, n = 100, main = NULL)"},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"pal palette function vector colors. n number colors display palette functions. main Title display top test image","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"Rates colorblindness women low, men rates around 3 7 percent, depending race. look : 1. colors still unique viewed less-full color? 2. sequential colormap still sequential?","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"Vischeck. http://www.vischeck.com/vischeck/ None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.safe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a palette/colormap for black/white and colorblind safety — pal.safe","text":"","code":"pal.safe(glasbey) #> Only 32 colors are available with 'glasbey'.  pal.safe(rainbow, main=\"rainbow\") # Really, really bad  pal.safe(cubicyf(100), main=\"cubicyf\")  pal.safe(parula, main=\"parula\")"},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a colormap with a scatterplot — pal.scatter","title":"Show a colormap with a scatterplot — pal.scatter","text":"look :","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a colormap with a scatterplot — pal.scatter","text":"","code":"pal.scatter(pal, n = 50, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a colormap with a scatterplot — pal.scatter","text":"pal palette function vector colors. n number colors display palette functions. main Main title","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a colormap with a scatterplot — pal.scatter","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a colormap with a scatterplot — pal.scatter","text":"1. Can colors point uniquely identified?","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a colormap with a scatterplot — pal.scatter","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a colormap with a scatterplot — pal.scatter","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a colormap with a scatterplot — pal.scatter","text":"","code":"pal.scatter(glasbey, n=31, main=\"glasbey\") # FIXME add legend  pal.scatter(parula, n=10) # not a good choice"},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a colormap with a sineramp — pal.sineramp","title":"Show a colormap with a sineramp — pal.sineramp","text":"test image shows sine wave superimposed ramp palette.  amplitude sine wave dampened/modulated full top image 0 bottom.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a colormap with a sineramp — pal.sineramp","text":"","code":"pal.sineramp(   pal,   n = 150,   nx = 512,   ny = 256,   amp = 12.5,   wavelen = 8,   pow = 2,   main = \"\" )"},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a colormap with a sineramp — pal.sineramp","text":"pal palette function vector colors. n number colors display palette functions. nx Number 'pixels' horizontally (approximate). ny Number 'pixels' vertically amp Amplitude sine wave, default 12.5 wavelen Wavelength sine wave, pixels, default 8. pow Power dampening sine wave. Default 2. dampening, use 0. linear dampening, use 1. main Main title","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a colormap with a sineramp — pal.sineramp","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a colormap with a sineramp — pal.sineramp","text":"ramp function sine wave superimposed upon adjusted slightly row row image spans full data range 0 255. wavelength chosen create stimulus aligned capabilities human vision.  default amplitude 12.5, trough peak distance 25, 10 percent 256 levels ramp. color palettes (like 'jet') perceptual flat areas can hide fluctuations/features magnitude. look : 1. sine wave equally visible horizontally across entire image? 2. bottom, ramp smooth, features like vertical bands?","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a colormap with a sineramp — pal.sineramp","text":"Peter Kovesi (2015). Good Colour Maps: Design . http://arxiv.org/abs/1509.03700. Peter Kovesi. set perceptually uniform color map files. http://peterkovesi.com/projects/colourmaps/index.html Peter Kovesi. CET Perceptually Uniform Colour Maps: Test Image. http://peterkovesi.com/projects/colourmaps/colourmaptestimage.html Original Julia version Peter Kovesi : https://github.com/peterkovesi/PerceptualColourMaps.jl/blob/master/src/utilities.jl","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a colormap with a sineramp — pal.sineramp","text":"Concept Peter Kovesi. R code Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.sineramp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a colormap with a sineramp — pal.sineramp","text":"","code":"pal.sineramp(parula)  pal.sineramp(jet) # Bad: Indistinct wave in green at top. Mach bands at bottom.  pal.sineramp(brewer.greys(100))"},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a colormap with multiple images — pal.test","title":"Show a colormap with multiple images — pal.test","text":"1. Z-curve","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a colormap with multiple images — pal.test","text":"","code":"pal.test(pal, main = substitute(pal))"},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a colormap with multiple images — pal.test","text":"pal palette function vector colors. main Title display top test image","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a colormap with multiple images — pal.test","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a colormap with multiple images — pal.test","text":"2. Contrast Sensitivity Function. 3. Frequency ramp. See: http://inversed.ru/Blog_2.htm vertical bands visible across full vertical axis? 4. 5. Two images 'volcano' elevation data R using forward/reverse colors. Try find highest point volcano peak.  Many palettes dark colors one end palette hide peak (e.g. viridis). Also try decide upperleft upperright corners color. 6. Luminosity red, green, blue, grey.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a colormap with multiple images — pal.test","text":"# See links .","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a colormap with multiple images — pal.test","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a colormap with multiple images — pal.test","text":"","code":"pal.test(parula)  pal.test(viridis) # dark colors are poor  pal.test(coolwarm)"},{"path":"https://kwstat.github.io/pals/reference/pal.volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a colormap with a surface of volcano elevation — pal.volcano","title":"Show a colormap with a surface of volcano elevation — pal.volcano","text":"palettes dark colors one end palette hide shape volcano dark colors. Viridis bad.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a colormap with a surface of volcano elevation — pal.volcano","text":"","code":"pal.volcano(pal, n = 100, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a colormap with a surface of volcano elevation — pal.volcano","text":"pal palette function vector colors. n number colors display palette functions. main Main title","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a colormap with a surface of volcano elevation — pal.volcano","text":"None.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.volcano.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a colormap with a surface of volcano elevation — pal.volcano","text":"look : 1. Can locate highest point volcano? 2. upper-right lower-right corners elevation? 3. Mach bands circle peak?","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a colormap with a surface of volcano elevation — pal.volcano","text":"","code":"pal.volcano(parula)  pal.volcano(brewer.rdbu) # Mach banding is bad  pal.volcano(warmcool, main=\"warmcool\") # No Mach band   pal.volcano(rev(viridis(100))) # Bad: peak position is hidden"},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a colormap with a space-filling z-curve — pal.zcurve","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"Construct Z-order curve, coloring cells colormap. difference color squares side--side 1/48 full range. difference color one square atop another 1/96 full range.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"","code":"pal.zcurve(pal, n = 64, main = \"\")"},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"pal continuous color palette function n Number squares z-curve main Main title","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"None","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"look : 1. good color palette 64 colors able resolve 4 sub-squares within 16 squares.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"Peter Karpov. 2016. Search Perfect Colormap. https://twitter.com/inversed_ru Z-order curve. https://en.wikipedia.org/wiki/Z-order_curve","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"Kevin Wright.","code":""},{"path":"https://kwstat.github.io/pals/reference/pal.zcurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a colormap with a space-filling z-curve — pal.zcurve","text":"","code":"pal.zcurve(parula,n=4,main=\"parula\")  pal.zcurve(parula,n=16)  pal.zcurve(parula,n=64)  pal.zcurve(parula,n=256)"},{"path":"https://kwstat.github.io/pals/reference/pals.html","id":null,"dir":"Reference","previous_headings":"","what":"pals: A package for comprehensive palettes and palette evaluation tools — pals","title":"pals: A package for comprehensive palettes and palette evaluation tools — pals","text":"pals: package comprehensive palettes palette evaluation tools","code":""},{"path":"https://kwstat.github.io/pals/reference/pals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pals: A package for comprehensive palettes and palette evaluation tools — pals","text":"terms 'palette' 'colormap' often interchanged. package (1) 'palette' usually discrete set distinct colors (2) 'colormap' usually smoothly varying set many colors. best palette/colormap determined (1) type structure data, (2) type graphic constructed, (3) type device used show graphic. ColorBrewer website approaches problem suggesting different colors qualitative, sequential, diverging data, also considers display graphic LCD photocopies. One limitation ColorBrewer uses maps, consider types graphics. example, yellow colors work well polygons (maps, barcharts, etc), poor lines scatter plots. 'pals' package provides suite tools evaluate palettes/colormaps. design goals package : palettes/colormaps functions return vector colors. palette function names use lowercase letters. 'data' directory used. Provide extensive collection palettes colormaps. memory efficient.  Colormaps compressed. Provide multiple tools evaluate palettes. learn , see vignettes: browseVignettes(package=\"pals\")","code":""},{"path":"https://kwstat.github.io/pals/reference/pals.maxcolors.html","id":null,"dir":"Reference","previous_headings":"","what":"Pals max colors — pals.maxcolors","title":"Pals max colors — pals.maxcolors","text":"function returns data frame maximum number colors  palette currently available within pals package.","code":""},{"path":"https://kwstat.github.io/pals/reference/pals.maxcolors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pals max colors — pals.maxcolors","text":"","code":"pals.maxcolors()"},{"path":"https://kwstat.github.io/pals/reference/pals.maxcolors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pals max colors — pals.maxcolors","text":"data frame maximum number colors palette.","code":""},{"path":"https://kwstat.github.io/pals/reference/pals.maxcolors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pals max colors — pals.maxcolors","text":"R code Brian M Schilder.","code":""},{"path":"https://kwstat.github.io/pals/reference/pals.maxcolors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pals max colors — pals.maxcolors","text":"","code":"dat <- pals.maxcolors()"},{"path":"https://kwstat.github.io/pals/reference/penobscot.html","id":null,"dir":"Reference","previous_headings":"","what":"Seismic data horizon offshore of Nova Scotia. — penobscot","title":"Seismic data horizon offshore of Nova Scotia. — penobscot","text":"Seismic data offsore Nova Scotia Canada. data subtle structures interesting comparing colormaps. Full details can found https://www.opendtect.org/osr/Main/PENOBSCOT3DSABLEISLAND License CC-.","code":""},{"path":"https://kwstat.github.io/pals/reference/penobscot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seismic data horizon offshore of Nova Scotia. — penobscot","text":"","code":"data(penobscot)"},{"path":"https://kwstat.github.io/pals/reference/penobscot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Seismic data horizon offshore of Nova Scotia. — penobscot","text":"matrix 463 x 595.","code":""},{"path":"https://kwstat.github.io/pals/reference/penobscot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Seismic data horizon offshore of Nova Scotia. — penobscot","text":"https://github.com/agilescientific/notebooks https://github.com/agilescientific/notebooks/blob/master/Filtering_horizons.ipynb","code":""},{"path":"https://kwstat.github.io/pals/reference/penobscot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seismic data horizon offshore of Nova Scotia. — penobscot","text":"","code":"# library(pals) data(penobscot)  # Hall used cubehelix palette # http://wiki.seg.org/wiki/Smoothing_surfaces_and_attributes#External_links image(penobscot, col=rev(cubehelix(99)))   # Niccoli suggested LinearL palette # http://wiki.seg.org/wiki/How_to_evaluate_and_compare_color_maps image(penobscot, col=linearl(99))   # Use this version to get a colorkey # library(lattice) # levelplot(penobscot, col.regions=rev(cubehelix(99)),  #   cuts=97, asp=0.7, scale=list(draw=FALSE))"},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-19-2024-07-15","dir":"Changelog","previous_headings":"","what":"pals 1.9 (2024-07-15)","title":"pals 1.9 (2024-07-15)","text":"Better warning pal.cube() called without rgl package installed (#10) Adam. New exported helper function: pals.maxcolors() (#5). @bschilder","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-18-2023-08-20","dir":"Changelog","previous_headings":"","what":"pals 1.8 (2023-08-20)","title":"pals 1.8 (2023-08-20)","text":"CRAN release: 2023-08-23 Switch MIT license. Add trubetskoy discrete color palette. Fix docType issue reported CRAN.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-17-2021-04-17","dir":"Changelog","previous_headings":"","what":"pals 1.7 (2021-04-17)","title":"pals 1.7 (2021-04-17)","text":"CRAN release: 2021-04-17 Added turbo palette.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-16-2019-12-04","dir":"Changelog","previous_headings":"","what":"pals 1.6 (2019-12-04)","title":"pals 1.6 (2019-12-04)","text":"CRAN release: 2019-12-04 Moved rgl Imports Suggests reduce startup load (#4, Kent Johnson). Moved maps Depends Imports. New function pal.heatmap2(). Added value-suppressing uncertainty palettes. brewer.pinkblue renamed brewer.seqseq1. brewer.orangeblue renamed brewer.seqseq2. covr coverage exceeds 90 percent.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-15-2018-01-22","dir":"Changelog","previous_headings":"","what":"pals 1.5 (2018-01-22)","title":"pals 1.5 (2018-01-22)","text":"CRAN release: 2018-01-22 Added tableau20 palette. Added penobscot data. Added cividis palette. Added brewer.* bivariate palettes.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-14-2017-06-12","dir":"Changelog","previous_headings":"","what":"pals 1.4 (2017-06-12)","title":"pals 1.4 (2017-06-12)","text":"CRAN release: 2017-06-12 Added 10 new discrete palettes bivariate choropleth maps.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-13-2017-06-03","dir":"Changelog","previous_headings":"","what":"pals 1.3 (2017-06-03)","title":"pals 1.3 (2017-06-03)","text":"CRAN release: 2017-06-02 stepped() palette gains 4 shades gray 24 total colors. Re-named pal36() palette polychrome().","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-10-2016-12-14","dir":"Changelog","previous_headings":"","what":"pals 1.0 (2016-12-14)","title":"pals 1.0 (2016-12-14)","text":"CRAN release: 2016-12-14 First CRAN release. Include maps Depends, otherwise error countyMapEnv.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-01---2016-07-01","dir":"Changelog","previous_headings":"","what":"pals 0.1 - (2016-07-01)","title":"pals 0.1 - (2016-07-01)","text":"Began package.","code":""},{"path":"https://kwstat.github.io/pals/news/index.html","id":"pals-00---2005-01-01","dir":"Changelog","previous_headings":"","what":"pals 0.0 - (2005-01-01)","title":"pals 0.0 - (2005-01-01)","text":"First palettes evaluation tools created.","code":""}]
